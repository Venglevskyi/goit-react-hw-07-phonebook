{"version":3,"sources":["Components/Toggler/toggler.module.css","Components/Filter/filter.module.css","base.module.css","Components/ContactListItem/contactList.module.css","Components/Layout/layout.module.css","Components/Loader/loader.module.css","redux/contacts/contactsActions.js","redux/contacts/contactsReducer.js","redux/store.js","redux/contacts/contactsOperations.js","redux/contacts/contactsSelectors.js","context/ThemeContext.js","hoc/withThemeContext.js","Components/Layout/Layout.js","Components/Loader/Loader.js","Components/Toggler/Toggler.js","Components/ContactForm/ContactForm.js","Components/ContactListItem/ContactListItem.js","Components/Filter/Filter.js","Components/ContactList/ContactList.js","App.js","index.js","Components/ContactForm/contactForm.module.css"],"names":["module","exports","addContactRequest","createAction","addContactSuccess","addContactError","getContactRequest","getContactSuccess","getContactError","removeContactRequest","removeContactSuccess","removeContactError","formFilter","items","createReducer","state","action","payload","filter","id","loader","combineReducers","store","configureStore","reducer","contacts","contactsReducer","baseUrl","getLoadingContact","getContacts","getFilterContact","getVisibleContacts","toLowerCase","item","name","includes","themeConfig","light","fontColor","bodybg","dark","Context","React","createContext","ThemeContext","toggleTheme","setState","theme","config","Provider","value","this","props","children","Component","Consumer","withThemeContext","WrappedComponent","ctx","className","styles","Layout","style","background","color","Spiner","type","height","width","themeSelector","switch","checked","onChange","target","slider","ContactForm","number","handleChange","handleSubmit","e","preventDefault","findContact","find","contact","alert","onAddContact","Form","onSubmit","FormLabel","FormInput","FormButton","mapDispatchToProps","dispatch","option","method","headers","Authorization","body","JSON","stringify","fetch","then","response","json","data","catch","error","connect","ownProps","contactId","getContactsById","removeContact","contactsListItem","deleteButton","onClick","filterForm","length","map","key","App","onGetContacts","isLoadingContact","title","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.03d522ee.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"themeSelector\":\"toggler_themeSelector__1QODZ\",\"switch\":\"toggler_switch__1qVYT\",\"slider\":\"toggler_slider__2uHk2\",\"round\":\"toggler_round__1ad_C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterForm\":\"filter_filterForm__3TXPz\",\"FormLabel\":\"filter_FormLabel__1C1U4\",\"FormInput\":\"filter_FormInput__TtHSN\",\"contactsListItem\":\"filter_contactsListItem__MgGSu\",\"deleteButton\":\"filter_deleteButton__16Fub\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"base_title__v1p0C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsListItem\":\"contactList_contactsListItem__2Cnbx\",\"deleteButton\":\"contactList_deleteButton__2Ncmj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"layout_Layout__2D6ll\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spiner\":\"loader_Spiner__2ZWGu\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addContactRequest = createAction(\"contact/addRequest\");\r\nconst addContactSuccess = createAction(\"contact/addSuccess\");\r\nconst addContactError = createAction(\"contact/addError\");\r\n\r\nconst getContactRequest = createAction(\"contact/getRequest\");\r\nconst getContactSuccess = createAction(\"contact/getSuccess\");\r\nconst getContactError = createAction(\"contact/getError\");\r\n\r\nconst removeContactRequest = createAction(\"contact/removeRequest\");\r\nconst removeContactSuccess = createAction(\"contact/removeSuccess\");\r\nconst removeContactError = createAction(\"contact/removeError\");\r\n\r\nconst formFilter = createAction(\"contact/formFilter\");\r\n\r\nexport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  getContactRequest,\r\n  getContactSuccess,\r\n  getContactError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n  formFilter\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  getContactRequest,\r\n  getContactSuccess,\r\n  getContactError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n  formFilter\r\n} from \"./contactsActions\";\r\n\r\nconst onAddContact = (state, action) => {\r\n  return [...state, action.payload];\r\n};\r\n\r\nconst onRemoveContact = (state, action) =>\r\n  state.filter(({ id }) => id !== action.payload);\r\n\r\nconst items = createReducer([], {\r\n  [getContactSuccess]: (state, action) => action.payload,\r\n  [addContactSuccess]: onAddContact,\r\n  [removeContactSuccess]: onRemoveContact\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [formFilter]: (state, action) => action.payload\r\n});\r\n\r\nconst loader = createReducer(false, {\r\n  [getContactRequest]: () => true,\r\n  [getContactSuccess]: () => false,\r\n  [getContactError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [removeContactRequest]: () => true,\r\n  [removeContactSuccess]: () => false,\r\n  [removeContactError]: () => false\r\n});\r\n\r\nexport default combineReducers({ items, filter, loader });\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport contactsReducer from \"./contacts/contactsReducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: { contacts: contactsReducer }\r\n});\r\n\r\nexport default store;\r\n","import {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  getContactRequest,\r\n  getContactSuccess,\r\n  getContactError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError\r\n} from \"./contactsActions\";\r\n\r\nconst baseUrl = \"https://goit-phonebook-api.herokuapp.com/v1/contacts\";\r\n\r\nconst addContact = (name, number) => dispatch => {\r\n  dispatch(addContactRequest());\r\n\r\n  const contact = {\r\n    name,\r\n    number\r\n  };\r\n  const option = {\r\n    method: \"POST\",\r\n    headers: {\r\n      Authorization: \"fcee5017-48e3-48f8-92f4-2944800aeec4\",\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify(contact)\r\n  };\r\n\r\n  fetch(baseUrl, option)\r\n    .then(response => response.json())\r\n    .then(data => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nconst getContacts = () => dispatch => {\r\n  dispatch(getContactRequest());\r\n\r\n  const option = {\r\n    method: \"GET\",\r\n    headers: {\r\n      Authorization: \"cb0a48ae-cb89-4ff5-80dd-fd9aa8ec6052\"\r\n    }\r\n  };\r\n\r\n  fetch(baseUrl, option)\r\n    .then(response => response.json())\r\n    .then(data => dispatch(getContactSuccess(data)))\r\n    .catch(error => dispatch(getContactError(error)));\r\n};\r\n\r\nconst removeContact = id => dispatch => {\r\n  dispatch(removeContactRequest());\r\n\r\n  const option = {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      Authorization: \"cb0a48ae-cb89-4ff5-80dd-fd9aa8ec6052\"\r\n    }\r\n  };\r\n\r\n  fetch(baseUrl + `/${id}`, option)\r\n    .then(response => response.json())\r\n    .then(() => dispatch(removeContactSuccess(id)))\r\n    .catch(error => dispatch(removeContactError(error)));\r\n};\r\n\r\nexport { addContact, getContacts, removeContact };","const getLoadingContact = state => state.contacts.loader;\r\n\r\nconst getContacts = state => state.contacts.items;\r\n\r\nconst getFilterContact = state => state.contacts.filter;\r\n\r\nconst getVisibleContacts = state => {\r\n  const filter = getFilterContact(state).toLowerCase();\r\n  const items = getContacts(state);\r\n\r\n  return items.filter(item => item.name.toLowerCase().includes(filter));\r\n};\r\n\r\nconst getContactsById = (state, contactId) => {\r\n    const contacts = getContacts(state);\r\n    return contacts.find(contact => contact.id === contactId)\r\n}\r\n\r\nexport { getLoadingContact, getContacts, getFilterContact, getVisibleContacts, getContactsById };\r\n","import React, { Component } from \"react\";\r\n\r\nconst themeConfig = {\r\n  light: {\r\n    fontColor: \"black\",\r\n    bodybg: \"#fff\"\r\n  },\r\n  dark: {\r\n    fontColor: \"white\",\r\n    bodybg: \"#333333\"\r\n  }\r\n};\r\n\r\nconst Context = React.createContext();\r\n\r\nexport default class ThemeContext extends Component {\r\n  static Consumer = Context.Consumer;\r\n\r\n  toggleTheme = () => {\r\n    this.setState(state => ({\r\n      theme: state.theme === \"dark\" ? \"light\" : \"dark\"\r\n    }));\r\n  };\r\n\r\n  state = {\r\n    theme: \"light\",\r\n    toggleTheme: this.toggleTheme,\r\n    config: themeConfig\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ThemeContext from \"../context/ThemeContext\";\r\n\r\nconst withThemeContext = WrappedComponent => {\r\n  return function withThemeContext(props) {\r\n    return (\r\n      <ThemeContext.Consumer>\r\n        {ctx => <WrappedComponent {...props} theme={ctx} />}\r\n      </ThemeContext.Consumer>\r\n    );\r\n  };\r\n};\r\n\r\nwithThemeContext.propTypes = {\r\n  value: PropTypes.shape({\r\n    theme: PropTypes.string.isRequired,\r\n    toggleTheme: PropTypes.func.isRequired,\r\n    config: PropTypes.exact({\r\n      light: PropTypes.exact({\r\n        bodybg: PropTypes.string.isRequired,\r\n        fontColor: PropTypes.string.isRequired\r\n      }),\r\n      dark: PropTypes.exact({\r\n        bodybg: PropTypes.string.isRequired,\r\n        fontColor: PropTypes.string.isRequired\r\n      })\r\n    })\r\n  })\r\n};\r\n\r\nexport default withThemeContext;\r\n","import React from \"react\";\r\nimport withThemeContext from \"../../hoc/withThemeContext\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./layout.module.css\";\r\n\r\nconst Layout = ({ children, theme: { theme, config } }) => (\r\n  <div\r\n    className={styles.Layout}\r\n    style={{\r\n      background: config[theme].bodybg,\r\n      color: config[theme].fontColor\r\n    }}\r\n  >\r\n    {children}\r\n  </div>\r\n);\r\n\r\nLayout.propTypes = {\r\n  theme: PropTypes.shape({\r\n    theme: PropTypes.string.isRequired,\r\n    config: PropTypes.exact({\r\n      light: PropTypes.exact({\r\n        bodybg: PropTypes.string.isRequired,\r\n        fontColor: PropTypes.string.isRequired\r\n      }),\r\n      dark: PropTypes.exact({\r\n        bodybg: PropTypes.string.isRequired,\r\n        fontColor: PropTypes.string.isRequired\r\n      })\r\n    })\r\n  })\r\n};\r\n\r\nexport default withThemeContext(Layout);\r\n","import React from \"react\";\r\n\r\nimport styles from \"./loader.module.css\";\r\n\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nconst Spiner = () => (\r\n  <div className={styles.Spiner}>\r\n    <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />\r\n  </div>\r\n);\r\n\r\nexport default Spiner;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport withThemeContext from \"../../hoc/withThemeContext\";\r\n\r\nimport styles from \"./toggler.module.css\";\r\n\r\nconst Toggler = ({ theme: { theme, toggleTheme } }) => (\r\n  <div className={styles.themeSelector}>\r\n    <label className={styles.switch}>\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={theme === \"dark\"}\r\n        onChange={({ target }) => toggleTheme(target.value)}\r\n      />\r\n      <span className={styles.slider}></span>\r\n    </label>\r\n  </div>\r\n);\r\n\r\nToggler.propTypes = {\r\n  theme: PropTypes.shape({\r\n    theme: PropTypes.string.isRequired,\r\n    toggleTheme: PropTypes.func.isRequired\r\n  })\r\n};\r\n\r\nexport default withThemeContext(Toggler);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addContact } from \"../../redux/contacts/contactsOperations\";\r\nimport { getContacts } from \"../../redux/contacts/contactsSelectors\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./contactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\"\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const findContact = this.props.contacts.find(\r\n      contact => contact.name === name\r\n    );\r\n    if (findContact) {\r\n      alert(`${findContact.name} is already consist`);\r\n      return;\r\n    }\r\n    this.props.onAddContact(name, number);\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={styles.Form} onSubmit={this.handleSubmit}>\r\n        <label className={styles.FormLabel}>\r\n          Name\r\n          <input\r\n            className={styles.FormInput}\r\n            type=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n            name=\"name\"\r\n          />\r\n        </label>\r\n        <label className={styles.FormLabel}>\r\n          Number\r\n          <input\r\n            className={styles.FormInput}\r\n            type=\"name\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n            name=\"number\"\r\n          />\r\n        </label>\r\n        <button className={styles.FormButton} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: getContacts(state)\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onAddContact: addContact\r\n};\r\n\r\nContactForm.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired\r\n    })\r\n  ),\r\n  onAddContact: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { removeContact } from \"../../redux/contacts/contactsOperations\";\r\nimport { getContactsById } from \"../../redux/contacts/contactsSelectors\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./contactList.module.css\";\r\n\r\nconst ContactListItem = ({ name, number, removeContact }) => (\r\n  <li className={styles.contactsListItem}>\r\n    <p>\r\n      {name}: {number}\r\n    </p>\r\n    <button\r\n      type=\"button\"\r\n      className={styles.deleteButton}\r\n      onClick={removeContact}\r\n    >\r\n      Delete\r\n    </button>\r\n  </li>\r\n);\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const item = getContactsById(state, ownProps.id);\r\n\r\n  return {\r\n    ...item\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  removeContact: () => dispatch(removeContact(ownProps.id))\r\n});\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  removeContact: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactListItem);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { formFilter } from \"../../redux/contacts/contactsActions\";\r\nimport {\r\n  getFilterContact,\r\n  getVisibleContacts\r\n} from \"../../redux/contacts/contactsSelectors\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\r\n\r\nimport styles from \"./filter.module.css\";\r\n\r\nconst Filter = ({ value, onChange, contacts }) => (\r\n  <div className={styles.filterForm}>\r\n    <label className={styles.FormLabel}>\r\n      Find contacts by name\r\n      <input\r\n        className={styles.FormInput}\r\n        type=\"name\"\r\n        value={value}\r\n        onChange={e => onChange(e.target.value)}\r\n      />\r\n    </label>\r\n    <ul>\r\n      {contacts.length > 1 &&\r\n        contacts.map(({ id }) => <ContactListItem key={id} id={id} />)}\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: getVisibleContacts(state),\r\n  value: getFilterContact(state)\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onChange: formFilter\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired\r\n    })\r\n  )\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getVisibleContacts } from \"../../redux/contacts/contactsSelectors\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\r\n\r\nconst ContactList = ({ contacts }) => (\r\n  <ul>\r\n    {contacts.map(({ id }) => (\r\n      <ContactListItem key={id} id={id} />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: getVisibleContacts(state)\r\n});\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired\r\n    })\r\n  )\r\n};\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addContact, getContacts } from \"./redux/contacts/contactsOperations\";\r\nimport { getLoadingContact } from \"./redux/contacts/contactsSelectors\";\r\n\r\nimport styles from \"./base.module.css\";\r\n\r\nimport Layout from \"./Components/Layout/Layout\";\r\nimport Spiner from \"./Components/Loader/Loader\";\r\nimport Toggler from \"./Components/Toggler/Toggler\";\r\nimport ContactForm from \"./Components/ContactForm/ContactForm\";\r\nimport Filter from \"./Components/Filter/Filter\";\r\nimport ContactList from \"./Components/ContactList/ContactList\";\r\nimport ThemeContext from \"./context/ThemeContext\";\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onGetContacts();\r\n  }\r\n\r\n  render() {\r\n    const { isLoadingContact } = this.props;\r\n    return (\r\n      <ThemeContext>\r\n        <Layout>\r\n          <Toggler />\r\n          <h1 className={styles.title}>Phonebook</h1>\r\n          <ContactForm />\r\n          <h2 className={styles.title}>Contacts</h2>\r\n          {!isLoadingContact && <Filter />}\r\n          {isLoadingContact && <Spiner />}\r\n          {!isLoadingContact && <ContactList />}\r\n        </Layout>\r\n      </ThemeContext>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isLoadingContact: getLoadingContact(state)\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onGetContacts: getContacts\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./redux/store\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"contactForm_Form__1-rZS\",\"FormLabel\":\"contactForm_FormLabel__3CokS\",\"FormInput\":\"contactForm_FormInput__2uLHb\",\"FormButton\":\"contactForm_FormButton__2nW9U\"};"],"sourceRoot":""}